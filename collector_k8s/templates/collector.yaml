{{ range $_, $collector := .Values.collectors -}}
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: "{{ $.Release.Name }}-{{ $collector.name }}"
spec:
  mode: {{ $collector.mode }}
  image: {{ $collector.image }}
  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8888'
  ports:
    - name: "metrics"
      port: 8888
  env:
    {{- toYaml $collector.env | nindent 4}}
  config: |
    exporters:
      {{- toYaml $collector.config.exporters | nindent 6 }}
    receivers:
      {{- toYaml $collector.config.receivers | nindent 6 }}
      {{ if $collector.scrape_configs_file }}
      prometheus:
        config:
          scrape_configs: {{ $.Files.Get $collector.scrape_configs_file | nindent 10 }}
      {{ end }}
    processors:
      {{- toYaml $collector.config.processors | nindent 6 }}
    service:
      {{- toYaml $collector.config.service | nindent 6 }}
  resources:
    {{- toYaml $collector.resources | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ $.Release.Name }}-{{ $collector.name }}"
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ $.Release.Name }}-{{ $collector.name }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ $.Release.Name }}-{{ $collector.name }}"
subjects:
- kind: ServiceAccount
  # quirk of the Operator
  name: "{{ $.Release.Name }}-{{ $collector.name }}-collector"
  namespace: {{ $.Release.Namespace }}
---
{{- end }}
